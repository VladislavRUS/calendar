{"version":3,"sources":["assets/icons/left-arrow.svg","assets/icons/right-arrow.svg","entry/Calendar/Calendar.styles.ts","entry/Calendar/CalendarHeader/CalendarHeader.styles.ts","store/events/selectors.ts","store/calendar/selectors.ts","constants/monthNames.ts","entry/Calendar/CalendarHeader/MonthToggle/MonthToggle.styles.ts","store/calendar/types.ts","store/calendar/actions.ts","entry/Calendar/CalendarHeader/MonthToggle/MonthToggle.tsx","entry/Calendar/CalendarHeader/CalendarHeader.tsx","entry/Calendar/CalendarBody/CalendarBody.styles.ts","entry/Calendar/CalendarBody/DaysNames/DaysNames.styles.ts","constants/shortDayNames.ts","entry/Calendar/CalendarBody/DaysNames/DaysNames.tsx","entry/Calendar/CalendarBody/DaysGrid/DaysGrid.styles.ts","entry/Calendar/CalendarBody/DaysGrid/Day/Day.styles.ts","store/events/types.ts","store/events/actions.ts","entry/Calendar/CalendarBody/DaysGrid/Day/DayEvent/DayEvent.styles.ts","components/Input/Input.styles.ts","components/Input/Input.tsx","components/Button/Button.styles.ts","components/Button/Button.tsx","components/TextArea/TextArea.styles.ts","components/TextArea/TextArea.tsx","entry/Calendar/CalendarBody/DaysGrid/Day/DayEvent/EventEditForm/EventEditForm.styles.ts","components/FormItem/FormItem.styles.ts","components/FormItem/FormItem.tsx","entry/Calendar/CalendarBody/DaysGrid/Day/DayEvent/EventEditForm/EventEditForm.tsx","entry/Calendar/CalendarBody/DaysGrid/Day/DayEvent/DayEvent.tsx","entry/Calendar/CalendarBody/DaysGrid/Day/Day.tsx","entry/Calendar/CalendarBody/DaysGrid/DaysGrid.tsx","entry/Calendar/CalendarBody/CalendarBody.tsx","components/Modal/Modal.styles.ts","assets/icons/close.svg","components/Modal/Modal.tsx","entry/Calendar/CreateEventModal/CreateEventModal.styles.ts","components/FieldLabel/FieldLabel.styles.ts","components/FieldLabel/FieldLabel.tsx","entry/Calendar/CreateEventModal/CreateEventModal.tsx","entry/Calendar/CalendarFooter/CalendarFooter.styles.ts","entry/Calendar/CalendarFooter/CalendarFooter.tsx","entry/Calendar/Calendar.tsx","entry/App.styles.ts","constants/MonthNumbers.ts","entry/App.tsx","store/calendar/reducer.ts","store/calendar/sagas.ts","utils/Storage.ts","store/events/reducer.ts","store/events/sagas.ts","store/index.ts","index.tsx","configureStore.ts"],"names":["module","exports","Wrapper","styled","div","HeaderWrapper","BodyWrapper","Date","ToggleWrapper","isCreateEventModalOpenedSelector","state","events","isCreateEventModalOpened","createEventDateSelector","createEventDate","eventsSelector","monthEventsSelect","month","createSelector","monthDate","set","filter","event","isSameMonth","date","nowSelector","calendar","now","yearSelector","year","monthSelector","daysSelector","start","startOfMonth","end","endOfMonth","interval","eachDayOfInterval","startDay","getDay","prevMonthDate","prevMonthEnd","prevMonthStart","getDate","prevMonthInterval","unshift","MONTH_NAMES","CalendarActionTypes","Today","button","Icon","img","Arrow","LeftArrow","RightArrow","setMonthAction","action","SET_MONTH","setYearAction","SET_YEAR","onTodayAction","ON_TODAY","onPrevMonthAction","ON_PREV_MONTH","onNextMonthAction","ON_NEXT_MONTH","connect","dispatch","bindActionCreators","onPrevMonth","onNextMonth","onToday","onClick","src","leftArrowIcon","rightArrowIcon","NamesWrapper","Name","SHORT_DAY_NAMES","DaysNames","map","name","key","EventsActionTypes","props","hasEvents","css","isCurrentDay","DateNumber","isCurrentMonthDay","DateNumberWrapper","openCreateEventModalAction","OPEN_CREATE_EVENT_MODAL","closeCreateEventModalAction","CLOSE_CREATE_EVENT_MODAL","createEventAction","values","CREATE_EVENT","setEventsAction","SET_EVENTS","updateEventAction","eventId","UPDATE_EVENT","deleteEventsAction","eventIds","DELETE_EVENTS","Time","Title","StyledInput","input","Input","StyledButton","variant","color","Button","children","rest","StyledTextarea","textarea","TextArea","StyledTextArea","Actions","FormItem","EventEditForm","onSubmit","onDelete","initialValues","render","handleSubmit","autoComplete","onBlur","type","rows","updateEvent","deleteEvents","useState","isPopoverOpen","setIsPopoverOpen","id","isOpen","position","containerStyle","overflow","content","targetRect","popoverRect","arrowColor","arrowSize","onClickOutside","time","title","ownProps","selectDayEvents","isSameDay","openCreateEventModal","getMonth","length","getTime","toString","format","days","day","CalendarBody","Overlay","motion","attrs","initial","opacity","animate","exit","transition","duration","y","maxWidth","Header","CloseButton","ModalActions","_extends","Object","assign","target","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","_ref","svgRef","width","height","viewBox","ref","ForwardRef","forwardRef","Modal","isOpened","onClose","ReactDOM","createPortal","document","body","StyledLabel","label","FieldLabel","validateForm","errors","description","closeCreateEventModal","createEvent","validate","hasValidationErrors","htmlFor","placeholder","disabled","EventsNumber","Calendar","MonthNumbers","CalendarContainer","App","initialState","getFullYear","calendarReducer","createReducer","handleType","payload","handleOnPrevMonth","handleOnNextMonth","handleOnToday","calendarSaga","select","prevMonth","January","put","December","prevYear","nextMonth","nextYear","getYear","watchers","fork","watchOnPrevMonth","takeEvery","watchOnToday","all","getName","AppStorage","localStorage","setItem","JSON","stringify","defaultValue","item","getItem","parse","ITEMS","EVENTS","get","eventsReducer","handleCreateEvent","handleUpdateEvent","handleDeleteEvents","eventsSaga","newEvent","shortid","generate","newEvents","save","watchCreateEvent","watchUpdateEvent","watchDeleteEvents","rootSaga","store","composeEnhancers","composeWithDevTools","sagaMiddleware","createSagaMiddleware","createStore","combineReducers","applyMiddleware","run","configureStore","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fca2abf1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/left-arrow.389ece5d.svg\";","module.exports = __webpack_public_path__ + \"static/media/right-arrow.167d8b53.svg\";","import styled from 'styled-components';\n\nexport const Wrapper = styled.div``;\n\nexport const HeaderWrapper = styled.div`\n  margin-bottom: 30px;\n`;\n\nexport const BodyWrapper = styled.div`\n  margin-bottom: 17px;\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Date = styled.div`\n  font-size: 20px;\n  line-height: 24px;\n  font-weight: 800;\n  color: #000;\n  text-transform: uppercase;\n`;\n\nexport const ToggleWrapper = styled.div`\n  margin-left: auto;\n`;\n","import { ApplicationState } from 'store/index';\nimport { createSelector } from 'reselect';\nimport isSameMonth from 'date-fns/isSameMonth';\nimport set from 'date-fns/set';\n\nexport const isCreateEventModalOpenedSelector = (state: ApplicationState) => state.events.isCreateEventModalOpened;\nexport const createEventDateSelector = (state: ApplicationState) => state.events.createEventDate;\nexport const eventsSelector = (state: ApplicationState) => state.events.events;\n\nexport const monthEventsSelect = (month: number) =>\n  createSelector([eventsSelector], (events) => {\n    const monthDate = set(new Date(), { month });\n\n    return events.filter((event) => isSameMonth(event.date, monthDate));\n  });\n","import { ApplicationState } from '../index';\nimport startOfMonth from 'date-fns/startOfMonth';\nimport endOfMonth from 'date-fns/endOfMonth';\nimport set from 'date-fns/set';\nimport eachDayOfInterval from 'date-fns/eachDayOfInterval';\nimport getDay from 'date-fns/getDay';\nimport isSameDay from 'date-fns/isSameDay';\nimport { createSelector } from 'reselect';\nimport { eventsSelector } from 'store/events/selectors';\n\nexport const nowSelector = (state: ApplicationState) => state.calendar.now;\nexport const yearSelector = (state: ApplicationState) => state.calendar.year;\nexport const monthSelector = (state: ApplicationState) => state.calendar.month;\n\nexport const daysSelector = createSelector([monthSelector, yearSelector], (month, year) => {\n  const date = set(new Date(), { month, year });\n\n  const start = startOfMonth(date);\n  const end = endOfMonth(date);\n  const interval = eachDayOfInterval({ start, end });\n\n  const startDay = getDay(start);\n\n  if (startDay > 0) {\n    const prevMonthDate = set(new Date(), { month: month - 1, year });\n\n    const prevMonthEnd = endOfMonth(prevMonthDate);\n    const prevMonthStart = set(prevMonthDate, { date: prevMonthEnd.getDate() - startDay + 1 });\n\n    const prevMonthInterval = eachDayOfInterval({ start: prevMonthStart, end: prevMonthEnd });\n\n    interval.unshift(...prevMonthInterval);\n  }\n\n  return interval;\n});\n\nexport const dayEventsSelector = (date: Date) =>\n  createSelector([eventsSelector], (events) => {\n    return events.filter((event) => isSameDay(event.date, date));\n  });\n","export const MONTH_NAMES = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Today = styled.button`\n  padding: 0;\n  margin: 0;\n  background-color: transparent;\n  border: none;\n  font-size: 11px;\n  color: #000;\n  cursor: pointer;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nexport const Icon = styled.img``;\n\nconst Arrow = styled.button`\n  padding: 5px;\n  margin: 0;\n  background-color: transparent;\n  border: none;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n`;\n\nexport const LeftArrow = styled(Arrow)``;\nexport const RightArrow = styled(Arrow)``;\n","export type CalendarState = {\n  now: number;\n  year: number;\n  month: number;\n};\n\nexport enum CalendarActionTypes {\n  SET_MONTH = '@@calendar/SET_MONTH',\n  SET_YEAR = '@@calendar/SET_YEAR',\n  ON_NEXT_MONTH = '@@calendar/ON_NEXT_MONTH',\n  ON_PREV_MONTH = '@@calendar/ON_PREV_MONTH',\n  ON_TODAY = '@@calendar/ON_TODAY',\n}\n","import { action } from 'typesafe-actions';\nimport { CalendarActionTypes } from 'store/calendar/types';\n\nexport const setMonthAction = (month: number) => action(CalendarActionTypes.SET_MONTH, { month });\nexport const setYearAction = (year: number) => action(CalendarActionTypes.SET_YEAR, { year });\nexport const onTodayAction = () => action(CalendarActionTypes.ON_TODAY);\nexport const onPrevMonthAction = () => action(CalendarActionTypes.ON_PREV_MONTH);\nexport const onNextMonthAction = () => action(CalendarActionTypes.ON_NEXT_MONTH);\n","import React from 'react';\nimport { Wrapper, Today, Icon, LeftArrow, RightArrow } from './MonthToggle.styles';\nimport leftArrowIcon from 'assets/icons/left-arrow.svg';\nimport rightArrowIcon from 'assets/icons/right-arrow.svg';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { onPrevMonthAction, onNextMonthAction, onTodayAction } from 'store/calendar/actions';\nimport { connect } from 'react-redux';\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      onPrevMonth: onPrevMonthAction,\n      onNextMonth: onNextMonthAction,\n      onToday: onTodayAction,\n    },\n    dispatch\n  );\n\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\n\ntype Props = DispatchProps;\n\nconst MonthToggle: React.FC<Props> = ({ onPrevMonth, onNextMonth, onToday }) => {\n  return (\n    <Wrapper>\n      <LeftArrow onClick={onPrevMonth}>\n        <Icon src={leftArrowIcon} />\n      </LeftArrow>\n      <Today onClick={onToday}>Today</Today>\n      <RightArrow onClick={onNextMonth}>\n        <Icon src={rightArrowIcon} />\n      </RightArrow>\n    </Wrapper>\n  );\n};\n\nexport default connect(null, mapDispatchToProps)(MonthToggle);\n","import React from 'react';\nimport { Wrapper, Date, ToggleWrapper } from './CalendarHeader.styles';\nimport { ApplicationState } from 'store';\nimport { monthSelector, yearSelector } from 'store/calendar/selectors';\nimport { connect } from 'react-redux';\nimport { MONTH_NAMES } from 'constants/monthNames';\nimport { MonthToggle } from './MonthToggle';\n\nconst mapStateToProps = (state: ApplicationState) => ({\n  year: yearSelector(state),\n  month: monthSelector(state),\n});\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\n\ntype Props = StateProps;\n\nconst CalendarHeader: React.FC<Props> = ({ year, month }) => {\n  return (\n    <Wrapper>\n      <Date>\n        {MONTH_NAMES[month]} {year}\n      </Date>\n\n      <ToggleWrapper>\n        <MonthToggle />\n      </ToggleWrapper>\n    </Wrapper>\n  );\n};\n\nexport default connect(mapStateToProps)(CalendarHeader);\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div``;\n\nexport const NamesWrapper = styled.div`\n  margin-bottom: 6px;\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr;\n`;\n\nexport const Name = styled.div`\n  font-size: 11px;\n  line-height: 13px;\n  color: #000;\n  text-align: right;\n  border: 1px solid transparent;\n`;\n","export const SHORT_DAY_NAMES = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n","import React from 'react';\nimport { Wrapper, Name } from './DaysNames.styles';\nimport { SHORT_DAY_NAMES } from 'constants/shortDayNames';\n\nconst DaysNames = () => {\n  return (\n    <Wrapper>\n      {SHORT_DAY_NAMES.map((name) => (\n        <Name key={name}>{name}</Name>\n      ))}\n    </Wrapper>\n  );\n};\n\nexport default DaysNames;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(\n      0,\n      1fr\n    );\n`;\n","import styled, { css } from 'styled-components';\n\nexport const Wrapper = styled.div<{ isCurrentMonthDay: boolean; isCurrentDay: boolean; hasEvents: boolean }>`\n  position: relative;\n  border: 1px solid #f2f2f2;\n  height: 85px;\n  padding-top: 6px;\n\n  ${(props) =>\n    !props.hasEvents &&\n    css`\n      &:hover {\n        border: 1px solid #2591ed;\n      }\n    `}\n\n  ${(props) =>\n    props.isCurrentDay &&\n    css`\n      background-color: #e0f1ff;\n\n      ${DateNumber} {\n        color: #fff;\n        background-color: #2591ed;\n        border-radius: 50%;\n      }\n    `}\n  \n  ${(props) =>\n    !props.isCurrentMonthDay &&\n    css`\n      pointer-events: none;\n\n      ${DateNumber} {\n        opacity: 0.4;\n      }\n    `}\n`;\n\nexport const DateNumberWrapper = styled.div`\n  padding: 0 6px;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  margin-bottom: 10px;\n`;\n\nexport const DateNumber = styled.div`\n  font-size: 11px;\n  color: #6f6e6e;\n  width: 16px;\n  height: 16px;\n  line-height: 16px;\n  text-align: center;\n`;\n","export type EventsState = {\n  events: Event[];\n  isCreateEventModalOpened: boolean;\n  createEventDate: number | null;\n};\n\nexport enum EventsActionTypes {\n  OPEN_CREATE_EVENT_MODAL = '@@events/OPEN_CREATE_EVENT_MODAL',\n  CLOSE_CREATE_EVENT_MODAL = '@@events/CLOSE_CREATE_EVENT_MODAL',\n  CREATE_EVENT = '@@events/CREATE_EVENT',\n  SET_EVENTS = '@@events/SET_EVENTS',\n  UPDATE_EVENT = '@@events/UPDATE_EVENT',\n  DELETE_EVENTS = '@@events/DELETE_EVENTS',\n}\n\nexport type Event = {\n  id: string;\n  time: string;\n  date: number;\n  title: string;\n  description: string;\n};\n\nexport type EventFormValues = Omit<Event, 'id'>;\n","import { action } from 'typesafe-actions';\nimport { EventsActionTypes, Event, EventFormValues } from './types';\n\nexport const openCreateEventModalAction = (createEventDate: number) =>\n  action(EventsActionTypes.OPEN_CREATE_EVENT_MODAL, { createEventDate });\n\nexport const closeCreateEventModalAction = () => action(EventsActionTypes.CLOSE_CREATE_EVENT_MODAL);\n\nexport const createEventAction = (values: EventFormValues) => action(EventsActionTypes.CREATE_EVENT, { values });\n\nexport const setEventsAction = (events: Event[]) => action(EventsActionTypes.SET_EVENTS, { events });\n\nexport const updateEventAction = (eventId: string, values: EventFormValues) =>\n  action(EventsActionTypes.UPDATE_EVENT, { eventId, values });\n\nexport const deleteEventsAction = (eventIds: string[]) => action(EventsActionTypes.DELETE_EVENTS, { eventIds });\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  background-color: #2591ed;\n  padding: 2px 3px;\n  min-width: 0;\n  cursor: pointer;\n  font-size: 8px;\n  line-height: 10px;\n  color: #ffffff;\n  flex-wrap: wrap;\n`;\n\nexport const Time = styled.div`\n  font-weight: bold;\n  margin-right: 4px;\n`;\n\nexport const Title = styled.div`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n","import styled from 'styled-components';\n\nexport const StyledInput = styled.input`\n  background-color: #f1f8fb;\n  border-radius: 4px;\n  font-size: 14px;\n  color: #544747;\n  padding: 10px 15px;\n  border: none;\n`;\n","import React from 'react';\nimport { StyledInput } from './Input.styles';\n\ntype Props = React.InputHTMLAttributes<HTMLInputElement>;\n\nconst Input: React.FC<Props> = (props) => <StyledInput {...props} />;\n\nexport default Input;\n","import styled, { css } from 'styled-components';\n\nexport const StyledButton = styled.button<{ variant: string; color: string }>`\n  padding: 10px 15px;\n  margin: 0;\n  border: none;\n  background: transparent;\n  border-radius: 6px;\n  cursor: pointer;\n\n  ${(props) =>\n    props.variant === 'contained' &&\n    css`\n      background-color: ${props.color};\n    `}\n\n  ${(props) =>\n    props.variant === 'text' &&\n    css`\n      color: ${props.color};\n      font-size: 14px;\n      text-transform: uppercase;\n    `}\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n","import React from 'react';\nimport { StyledButton } from './Button.styles';\n\ntype Props = React.ButtonHTMLAttributes<HTMLButtonElement> & {\n  variant?: 'contained' | 'text';\n  color?: string;\n};\n\nconst Button: React.FC<Props> = ({ variant = 'text', color = '#000', children, ...rest }) => (\n  <StyledButton variant={variant} color={color} {...rest}>\n    {children}\n  </StyledButton>\n);\n\nexport default Button;\n","import styled from 'styled-components';\n\nexport const StyledTextarea = styled.textarea`\n  background-color: #f1f8fb;\n  border-radius: 4px;\n  font-size: 14px;\n  color: #544747;\n  padding: 10px 15px;\n  border: none;\n  resize: none;\n`;\n","import React from 'react';\nimport { StyledTextarea } from './TextArea.styles';\n\ntype Props = React.TextareaHTMLAttributes<HTMLTextAreaElement>;\n\nconst TextArea: React.FC<Props> = (props) => <StyledTextarea {...props} />;\n\nexport default TextArea;\n","import styled from 'styled-components';\nimport { Input } from 'components/Input';\nimport { Button } from 'components/Button';\nimport { TextArea } from 'components/TextArea';\n\nexport const StyledInput = styled(Input)`\n  width: 100%;\n  padding: 3px 5px;\n  font-size: 8px;\n  line-height: 10px;\n`;\n\nexport const StyledTextArea = styled(TextArea)`\n  width: 100%;\n  padding: 3px 5px;\n  font-size: 8px;\n  line-height: 10px;\n`;\n\nexport const Wrapper = styled.div`\n  width: 126px;\n  padding: 9px;\n  background-color: #fff;\n  border-radius: 10px;\n  box-shadow: 0 6px 11px rgba(22, 97, 161, 0.11);\n`;\n\nexport const Actions = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 5px;\n  justify-content: flex-end;\n`;\n\nexport const StyledButton = styled(Button)`\n  font-size: 8px;\n  padding: 5px 7px;\n  text-transform: none;\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  & + & {\n    margin-top: 20px;\n  }\n`;\n","import React from 'react';\nimport { Wrapper } from './FormItem.styles';\n\nconst FormItem: React.FC = ({ children }) => <Wrapper>{children}</Wrapper>;\n\nexport default FormItem;\n","import React from 'react';\nimport { Wrapper, Actions, StyledInput, StyledButton, StyledTextArea } from './EventEditForm.styles';\nimport { Form, Field } from 'react-final-form';\nimport { FormItem } from 'components/FormItem';\nimport { Event, EventFormValues } from 'store/events/types';\n\ntype Props = {\n  event: Event;\n  onSubmit: (values: EventFormValues) => void;\n  onDelete: () => void;\n};\n\nconst EventEditForm: React.FC<Props> = ({ event, onSubmit, onDelete }) => (\n  <Wrapper>\n    <Form\n      initialValues={event}\n      onSubmit={onSubmit}\n      render={({ handleSubmit }) => (\n        <form onSubmit={handleSubmit} autoComplete=\"off\">\n          <FormItem>\n            <Field name=\"title\" render={({ input }) => <StyledInput {...input} onBlur={handleSubmit} />} />\n          </FormItem>\n\n          <FormItem>\n            <Field name=\"time\" render={({ input }) => <StyledInput type=\"time\" {...input} onBlur={handleSubmit} />} />\n          </FormItem>\n\n          <FormItem>\n            <Field\n              name=\"description\"\n              render={({ input }) => <StyledTextArea {...input} onBlur={handleSubmit} rows={5} />}\n            />\n          </FormItem>\n\n          <Actions>\n            <StyledButton variant=\"text\" color=\"#FF727A\" onClick={onDelete} type=\"button\">\n              delete\n            </StyledButton>\n          </Actions>\n        </form>\n      )}\n    />\n  </Wrapper>\n);\n\nexport default EventEditForm;\n","import React, { useState } from 'react';\nimport { Wrapper, Time, Title } from './DayEvent.styles';\nimport { Event, EventFormValues } from 'store/events/types';\nimport Popover, { ArrowContainer } from 'react-tiny-popover';\nimport { EventEditForm } from './EventEditForm';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { deleteEventsAction, updateEventAction } from 'store/events/actions';\nimport { connect } from 'react-redux';\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      updateEvent: updateEventAction,\n      deleteEvents: deleteEventsAction,\n    },\n    dispatch\n  );\n\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\n\ntype OwnProps = {\n  event: Event;\n};\n\ntype Props = OwnProps & DispatchProps;\n\nconst DayEvent: React.FC<Props> = ({ event, updateEvent, deleteEvents }) => {\n  const [isPopoverOpen, setIsPopoverOpen] = useState(false);\n\n  const openPopover = () => setIsPopoverOpen(true);\n  const closePopover = () => setIsPopoverOpen(false);\n\n  const onSubmit = (values: EventFormValues) => updateEvent(event.id, values);\n\n  const onDelete = () => deleteEvents([event.id]);\n\n  return (\n    <Popover\n      isOpen={isPopoverOpen}\n      position=\"right\"\n      containerStyle={{\n        overflow: 'visible',\n      }}\n      content={({ position, targetRect, popoverRect }) => (\n        <ArrowContainer\n          position={position}\n          targetRect={targetRect}\n          popoverRect={popoverRect}\n          arrowColor=\"#fff\"\n          arrowSize={10}\n        >\n          <EventEditForm event={event} onSubmit={onSubmit} onDelete={onDelete} />\n        </ArrowContainer>\n      )}\n      onClickOutside={closePopover}\n    >\n      <Wrapper onClick={openPopover}>\n        <Time>{event.time}</Time>\n        <Title title={event.title}>{event.title}</Title>\n      </Wrapper>\n    </Popover>\n  );\n};\n\nexport default connect(null, mapDispatchToProps)(DayEvent);\n","import React from 'react';\nimport { Wrapper, DateNumber, DateNumberWrapper } from './Day.styles';\nimport format from 'date-fns/format';\nimport { ApplicationState } from 'store';\nimport { dayEventsSelector, monthSelector, nowSelector } from 'store/calendar/selectors';\nimport { openCreateEventModalAction } from 'store/events/actions';\nimport { connect } from 'react-redux';\nimport isSameDay from 'date-fns/isSameDay';\nimport getMonth from 'date-fns/getMonth';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { DayEvent } from './DayEvent';\n\nconst mapStateToProps = (state: ApplicationState, ownProps: OwnProps) => {\n  const selectDayEvents = dayEventsSelector(ownProps.date);\n\n  return (state: ApplicationState) => ({\n    now: nowSelector(state),\n    month: monthSelector(state),\n    events: selectDayEvents(state),\n  });\n};\n\ntype StateProps = ReturnType<ReturnType<typeof mapStateToProps>>;\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      openCreateEventModal: openCreateEventModalAction,\n    },\n    dispatch\n  );\n\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\n\ntype OwnProps = {\n  date: Date;\n};\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nconst Day: React.FC<Props> = ({ now, date, month, events, openCreateEventModal }) => {\n  const isCurrentDay = isSameDay(now, date);\n  const isCurrentMonthDay = getMonth(date) === month;\n\n  const onClick = () => {\n    if (events.length === 0) {\n      openCreateEventModal(date.getTime());\n    }\n  };\n\n  return (\n    <Wrapper\n      isCurrentMonthDay={isCurrentMonthDay}\n      isCurrentDay={isCurrentDay}\n      onClick={onClick}\n      hasEvents={events.length > 0}\n      id={date.getTime().toString()}\n    >\n      <DateNumberWrapper>\n        <DateNumber>{format(date, 'd')}</DateNumber>\n      </DateNumberWrapper>\n\n      {events.map((event) => (\n        <DayEvent key={event.id} event={event} />\n      ))}\n    </Wrapper>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Day);\n","import React from 'react';\nimport { ApplicationState } from 'store';\nimport { daysSelector } from 'store/calendar/selectors';\nimport { connect } from 'react-redux';\nimport { Wrapper } from './DaysGrid.styles';\nimport { Day } from './Day';\n\nconst mapStateToProps = (state: ApplicationState) => ({\n  days: daysSelector(state),\n});\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\n\ntype Props = StateProps;\n\nconst DaysGrid: React.FC<Props> = ({ days }) => (\n  <Wrapper>\n    {days.map((day) => (\n      <Day key={day.getTime()} date={day} />\n    ))}\n  </Wrapper>\n);\n\nexport default connect(mapStateToProps)(DaysGrid);\n","import React from 'react';\nimport { Wrapper, NamesWrapper } from './CalendarBody.styles';\nimport { DaysNames } from './DaysNames';\nimport { DaysGrid } from 'entry/Calendar/CalendarBody/DaysGrid';\n\nconst CalendarBody = () => (\n  <Wrapper>\n    <NamesWrapper>\n      <DaysNames />\n    </NamesWrapper>\n    <DaysGrid />\n  </Wrapper>\n);\n\nexport default CalendarBody;\n","import styled from 'styled-components';\nimport { motion } from 'framer-motion';\n\nexport const Overlay = styled(motion.div).attrs({\n  initial: { opacity: 0 },\n  animate: { opacity: 1 },\n  exit: { opacity: 0 },\n  transition: { duration: 0.25 },\n})`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Wrapper = styled(motion.div).attrs({\n  initial: { y: 100 },\n  animate: { y: 0 },\n  exit: { y: 100 },\n  transition: { duration: 0.25 },\n})<{ maxWidth: number }>`\n  position: relative;\n  width: 100%;\n  max-width: ${(props) => props.maxWidth}px;\n  background-color: #fff;\n  padding: 20px;\n  box-shadow: 0 0 10px -2px rgba(0, 0, 0, 0.3);\n`;\n\nexport const Header = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  margin-bottom: 30px;\n  padding-right: 30px;\n`;\n\nexport const Title = styled.div`\n  font-size: 24px;\n`;\n\nexport const CloseButton = styled.button`\n  padding: 0;\n  margin: 0;\n  position: absolute;\n  right: 0;\n  top: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 20px;\n  height: 20px;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n`;\n\nexport const ModalActions = styled.div`\n  margin-top: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n`;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z\"\n});\n\nvar SvgClose = function SvgClose(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgClose, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/close.0f9f00b6.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Overlay, Wrapper, Header, Title, CloseButton, ModalActions } from './Modal.styles';\nimport { ReactComponent as CloseIcon } from 'assets/icons/close.svg';\nimport { AnimatePresence } from 'framer-motion';\n\ntype Props = {\n  isOpened: boolean;\n  onClose: () => void;\n  title: string;\n  maxWidth?: number;\n};\n\nconst Modal: React.FC<Props> & { Actions: React.FC } = ({ isOpened, title, maxWidth = 600, onClose, children }) => {\n  return ReactDOM.createPortal(\n    <AnimatePresence>\n      {isOpened && (\n        <Overlay>\n          <Wrapper maxWidth={maxWidth}>\n            <Header>\n              <Title>{title}</Title>\n              <CloseButton onClick={onClose}>\n                <CloseIcon />\n              </CloseButton>\n            </Header>\n            {children}\n          </Wrapper>\n        </Overlay>\n      )}\n    </AnimatePresence>,\n    document.body\n  );\n};\n\nconst Actions: React.FC = ({ children }) => <ModalActions>{children}</ModalActions>;\n\nModal.Actions = Actions;\n\nexport default Modal;\n","import styled from 'styled-components';\nimport { Input } from 'components/Input';\nimport { TextArea } from 'components/TextArea';\n\nexport const StyledInput = styled(Input)`\n  width: 100%;\n`;\n\nexport const StyledTextArea = styled(TextArea)`\n  width: 100%;\n`;\n","import styled from 'styled-components';\n\nexport const StyledLabel = styled.label`\n  display: inline-block;\n  margin-bottom: 10px;\n  font-size: 16px;\n  color: grey;\n`;\n","import React from 'react';\nimport { StyledLabel } from './FieldLabel.styles';\n\ntype Props = React.LabelHTMLAttributes<HTMLLabelElement>;\n\nconst FieldLabel: React.FC<Props> = ({ children, ...rest }) => <StyledLabel {...rest}>{children}</StyledLabel>;\n\nexport default FieldLabel;\n","import React from 'react';\nimport { Modal } from 'components/Modal';\nimport { ApplicationState } from 'store';\nimport { isCreateEventModalOpenedSelector, createEventDateSelector } from 'store/events/selectors';\nimport { closeCreateEventModalAction, createEventAction } from 'store/events/actions';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { Form, Field } from 'react-final-form';\nimport { StyledInput, StyledTextArea } from './CreateEventModal.styles';\nimport { FormItem } from 'components/FormItem';\nimport { FieldLabel } from 'components/FieldLabel';\nimport { Button } from 'components/Button';\nimport { ValidationErrors } from 'final-form';\nimport format from 'date-fns/format';\nimport { EventFormValues } from 'store/events/types';\n\nconst mapStateToProps = (state: ApplicationState) => ({\n  isCreateEventModalOpened: isCreateEventModalOpenedSelector(state),\n  createEventDate: createEventDateSelector(state),\n});\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      closeCreateEventModal: closeCreateEventModalAction,\n      createEvent: createEventAction,\n    },\n    dispatch\n  );\n\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\n\ntype Props = StateProps & DispatchProps;\n\ntype FormValues = {\n  time?: string;\n  title?: string;\n  description?: string;\n};\n\nconst validateForm = (values: FormValues) => {\n  const errors: ValidationErrors = {};\n\n  if (!values.time) {\n    errors.time = 'Time is required';\n  }\n\n  if (!values.title) {\n    errors.title = 'Title is required';\n  }\n\n  if (!values.description) {\n    errors.description = 'Description is required';\n  }\n\n  return errors;\n};\n\nconst CreateEventModal: React.FC<Props> = ({\n  createEventDate,\n  isCreateEventModalOpened,\n  closeCreateEventModal,\n  createEvent,\n}) => {\n  const onSubmit = (values: EventFormValues) => {\n    createEvent(values);\n  };\n\n  const title = 'New event at ' + (createEventDate ? format(createEventDate, 'd MMMM, yyyy') : '');\n\n  return (\n    <Modal isOpened={isCreateEventModalOpened} onClose={closeCreateEventModal} title={title}>\n      <Form\n        onSubmit={onSubmit}\n        initialValues={{\n          time: '12:00',\n        }}\n        validate={validateForm}\n        render={({ handleSubmit, hasValidationErrors }) => (\n          <form onSubmit={handleSubmit} autoComplete=\"off\">\n            <FormItem>\n              <FieldLabel htmlFor=\"title\">Enter title</FieldLabel>\n\n              <Field name=\"title\" render={({ input }) => <StyledInput id=\"title\" placeholder=\"Title\" {...input} />} />\n            </FormItem>\n\n            <FormItem>\n              <FieldLabel htmlFor=\"time\">Enter time</FieldLabel>\n\n              <Field name=\"time\" type=\"time\" render={({ input }) => <StyledInput id=\"time\" {...input} />} />\n            </FormItem>\n\n            <FormItem>\n              <FieldLabel htmlFor=\"description\">Enter description</FieldLabel>\n\n              <Field\n                name=\"description\"\n                render={({ input }) => (\n                  <StyledTextArea id=\"description\" placeholder=\"Description\" {...input} rows={5} />\n                )}\n              />\n            </FormItem>\n\n            <Modal.Actions>\n              <Button variant=\"text\" color=\"#2591ED\" type=\"submit\" disabled={hasValidationErrors}>\n                Save\n              </Button>\n            </Modal.Actions>\n          </form>\n        )}\n      />\n    </Modal>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateEventModal);\n","import styled from 'styled-components';\nimport { Button } from 'components/Button';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const EventsNumber = styled.div`\n  font-weight: normal;\n  font-size: 12px;\n  line-height: 15px;\n  color: #b0afaf;\n  margin-bottom: 2px;\n`;\n\nexport const StyledButton = styled(Button)`\n  font-size: 12px;\n  line-height: 15px;\n  text-transform: none;\n  padding: 4px;\n`;\n","import React from 'react';\nimport { ApplicationState } from 'store';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { deleteEventsAction } from 'store/events/actions';\nimport { monthSelector } from 'store/calendar/selectors';\nimport { Wrapper, EventsNumber, StyledButton } from './CalendarFooter.styles';\nimport { monthEventsSelect } from 'store/events/selectors';\nimport { MONTH_NAMES } from 'constants/monthNames';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = (state: ApplicationState) => {\n  const month = monthSelector(state);\n\n  return {\n    month,\n    events: monthEventsSelect(month)(state),\n  };\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      deleteEvents: deleteEventsAction,\n    },\n    dispatch\n  );\n\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\n\ntype Props = StateProps & DispatchProps;\n\nconst CalendarFooter: React.FC<Props> = ({ month, events, deleteEvents }) => {\n  const onDeleteAll = () => deleteEvents(events.map((event) => event.id));\n\n  return (\n    <Wrapper>\n      <EventsNumber>\n        {events.length > 0 ? events.length : 'No'} events on {MONTH_NAMES[month]} -{' '}\n      </EventsNumber>\n      <StyledButton variant=\"text\" color=\"#2591ED\" onClick={onDeleteAll}>\n        Remove All\n      </StyledButton>\n    </Wrapper>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarFooter);\n","import React from 'react';\nimport { Wrapper, HeaderWrapper, BodyWrapper } from './Calendar.styles';\nimport { CalendarHeader } from './CalendarHeader';\nimport { CalendarBody } from './CalendarBody';\nimport { CreateEventModal } from './CreateEventModal';\nimport { CalendarFooter } from './CalendarFooter';\n\nconst Calendar = () => (\n  <Wrapper>\n    <HeaderWrapper>\n      <CalendarHeader />\n    </HeaderWrapper>\n    <BodyWrapper>\n      <CalendarBody />\n    </BodyWrapper>\n    <CalendarFooter />\n    <CreateEventModal />\n  </Wrapper>\n);\n\nexport default Calendar;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-content: center;\n  justify-content: center;\n  padding: 39px 48px;\n\n  @media screen and (max-width: 600px) {\n    padding: 10px 15px;\n  }\n`;\n\nexport const CalendarContainer = styled.div`\n  max-width: 650px;\n  flex-grow: 1;\n`;\n","export enum MonthNumbers {\n  January = 0,\n  February = 1,\n  March = 2,\n  April = 3,\n  May = 4,\n  June = 5,\n  July = 6,\n  August = 7,\n  September = 8,\n  October = 9,\n  November = 10,\n  December = 11,\n}\n","import React from 'react';\nimport { Calendar } from './Calendar';\nimport { Wrapper, CalendarContainer } from './App.styles';\n\nconst App = () => (\n  <Wrapper>\n    <CalendarContainer>\n      <Calendar />\n    </CalendarContainer>\n  </Wrapper>\n);\n\nexport default App;\n","import { CalendarActionTypes, CalendarState } from './types';\nimport { ActionType, createReducer } from 'typesafe-actions';\nimport * as actions from './actions';\n\ntype RootAction = ActionType<typeof actions>;\n\nconst now = new Date();\n\nconst initialState: CalendarState = {\n  now: now.getTime(),\n  year: now.getFullYear(),\n  month: now.getMonth(),\n};\n\nexport const calendarReducer = createReducer<CalendarState, RootAction>(initialState)\n  .handleType(CalendarActionTypes.SET_MONTH, (state, action) => ({ ...state, month: action.payload.month }))\n  .handleType(CalendarActionTypes.SET_YEAR, (state, action) => ({ ...state, year: action.payload.year }));\n","import { all, fork, takeEvery, select, put } from 'redux-saga/effects';\nimport { CalendarActionTypes } from 'store/calendar/types';\nimport { monthSelector, nowSelector, yearSelector } from 'store/calendar/selectors';\nimport { setMonthAction, setYearAction } from 'store/calendar/actions';\nimport { MonthNumbers } from 'constants/MonthNumbers';\nimport getMonth from 'date-fns/getMonth';\nimport getYear from 'date-fns/getYear';\n\nfunction* handleOnPrevMonth() {\n  const month: ReturnType<typeof monthSelector> = yield select(monthSelector);\n\n  const prevMonth = month - 1;\n\n  if (prevMonth >= MonthNumbers.January) {\n    yield put(setMonthAction(prevMonth));\n  } else {\n    yield put(setMonthAction(MonthNumbers.December));\n\n    const year: ReturnType<typeof yearSelector> = yield select(yearSelector);\n    const prevYear = year - 1;\n\n    yield put(setYearAction(prevYear));\n  }\n}\n\nfunction* handleOnNextMonth() {\n  const month: ReturnType<typeof monthSelector> = yield select(monthSelector);\n\n  const nextMonth = month + 1;\n\n  if (nextMonth <= MonthNumbers.December) {\n    yield put(setMonthAction(nextMonth));\n  } else {\n    yield put(setMonthAction(MonthNumbers.January));\n\n    const year: ReturnType<typeof yearSelector> = yield select(yearSelector);\n    const nextYear = year + 1;\n\n    yield put(setYearAction(nextYear));\n  }\n}\n\nfunction* handleOnToday() {\n  const now: ReturnType<typeof nowSelector> = yield select(nowSelector);\n\n  yield put(setMonthAction(getMonth(now)));\n  yield put(setYearAction(getYear(now)));\n}\n\nconst watchers = [\n  fork(function* watchOnPrevMonth() {\n    yield takeEvery(CalendarActionTypes.ON_PREV_MONTH, handleOnPrevMonth);\n  }),\n  fork(function* watchOnPrevMonth() {\n    yield takeEvery(CalendarActionTypes.ON_NEXT_MONTH, handleOnNextMonth);\n  }),\n  fork(function* watchOnToday() {\n    yield takeEvery(CalendarActionTypes.ON_TODAY, handleOnToday);\n  }),\n];\n\nfunction* calendarSaga() {\n  yield all(watchers);\n}\n\nexport { calendarSaga };\n","const VERSION = 'v1';\n\nconst getName = (key: string) => {\n  return `@@${VERSION}/${key}`;\n};\n\nexport class AppStorage {\n  static ITEMS = {\n    EVENTS: 'events',\n  };\n\n  static save(key: string, values: Object) {\n    localStorage.setItem(getName(key), JSON.stringify(values));\n  }\n\n  static get<T>(key: string, defaultValue: T) {\n    const item = localStorage.getItem(getName(key));\n\n    if (item) {\n      return JSON.parse(item) as T;\n    }\n\n    return defaultValue;\n  }\n}\n","import { EventsActionTypes, EventsState } from 'store/events/types';\nimport { ActionType, createReducer } from 'typesafe-actions';\nimport * as actions from './actions';\nimport { AppStorage } from 'utils/Storage';\n\ntype RootAction = ActionType<typeof actions>;\n\nconst initialState: EventsState = {\n  events: AppStorage.get(AppStorage.ITEMS.EVENTS, []),\n  isCreateEventModalOpened: false,\n  createEventDate: null,\n};\n\nexport const eventsReducer = createReducer<EventsState, RootAction>(initialState)\n  .handleType(EventsActionTypes.OPEN_CREATE_EVENT_MODAL, (state, action) => ({\n    ...state,\n    isCreateEventModalOpened: true,\n    createEventDate: action.payload.createEventDate,\n  }))\n  .handleType(EventsActionTypes.CLOSE_CREATE_EVENT_MODAL, (state) => ({\n    ...state,\n    isCreateEventModalOpened: false,\n    createEventDate: null,\n  }))\n  .handleType(EventsActionTypes.SET_EVENTS, (state, action) => ({\n    ...state,\n    events: action.payload.events,\n  }));\n","import { fork, all, takeEvery, select, put } from 'redux-saga/effects';\nimport { EventsActionTypes } from 'store/events/types';\nimport {\n  closeCreateEventModalAction,\n  createEventAction,\n  deleteEventsAction,\n  setEventsAction,\n  updateEventAction,\n} from 'store/events/actions';\nimport { createEventDateSelector, eventsSelector } from 'store/events/selectors';\nimport { Event } from './types';\nimport shortid from 'shortid';\nimport { AppStorage } from 'utils/Storage';\n\nfunction* handleCreateEvent(action: ReturnType<typeof createEventAction>) {\n  const { values } = action.payload;\n  const createEventDate: ReturnType<typeof createEventDateSelector> = yield select(createEventDateSelector);\n\n  const newEvent: Event = { id: shortid.generate(), date: createEventDate, ...values };\n\n  const events: ReturnType<typeof eventsSelector> = yield select(eventsSelector);\n\n  const newEvents = [...events, newEvent];\n\n  yield put(setEventsAction(newEvents));\n  AppStorage.save(AppStorage.ITEMS.EVENTS, newEvents);\n\n  yield put(closeCreateEventModalAction());\n}\n\nfunction* handleUpdateEvent(action: ReturnType<typeof updateEventAction>) {\n  const { eventId, values } = action.payload;\n  const events: ReturnType<typeof eventsSelector> = yield select(eventsSelector);\n\n  const newEvents = events.map((event) => {\n    if (event.id === eventId) {\n      return { ...event, ...values };\n    }\n\n    return event;\n  });\n\n  yield put(setEventsAction(newEvents));\n  AppStorage.save(AppStorage.ITEMS.EVENTS, newEvents);\n}\n\nfunction* handleDeleteEvents(action: ReturnType<typeof deleteEventsAction>) {\n  const { eventIds } = action.payload;\n  const events: ReturnType<typeof eventsSelector> = yield select(eventsSelector);\n  const newEvents = events.filter((event) => eventIds.indexOf(event.id) === -1);\n\n  yield put(setEventsAction(newEvents));\n  AppStorage.save(AppStorage.ITEMS.EVENTS, newEvents);\n}\n\nconst watchers = [\n  fork(function* watchCreateEvent() {\n    yield takeEvery(EventsActionTypes.CREATE_EVENT, handleCreateEvent);\n  }),\n  fork(function* watchUpdateEvent() {\n    yield takeEvery(EventsActionTypes.UPDATE_EVENT, handleUpdateEvent);\n  }),\n  fork(function* watchDeleteEvents() {\n    yield takeEvery(EventsActionTypes.DELETE_EVENTS, handleDeleteEvents);\n  }),\n];\n\nfunction* eventsSaga() {\n  yield all(watchers);\n}\n\nexport { eventsSaga };\n","import { combineReducers } from 'redux';\nimport { CalendarState } from './calendar/types';\nimport { calendarReducer } from './calendar/reducer';\nimport { all, fork } from 'redux-saga/effects';\nimport { calendarSaga } from 'store/calendar/sagas';\nimport { EventsState } from 'store/events/types';\nimport { eventsReducer } from 'store/events/reducer';\nimport { eventsSaga } from 'store/events/sagas';\n\nexport type ApplicationState = {\n  calendar: CalendarState;\n  events: EventsState;\n};\n\nexport const createRootReducer = () =>\n  combineReducers({\n    calendar: calendarReducer,\n    events: eventsReducer,\n  });\n\nexport function* rootSaga() {\n  yield all([fork(calendarSaga), fork(eventsSaga)]);\n}\n","import 'normalize.css';\nimport './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from 'entry';\nimport { Provider } from 'react-redux';\nimport configureStore from './configureStore';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import { applyMiddleware, createStore, Store } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createRootReducer, ApplicationState, rootSaga } from 'store';\nimport createSagaMiddleware from 'redux-saga';\n\nexport default function configureStore(): Store<ApplicationState> {\n  const composeEnhancers = composeWithDevTools({});\n  const sagaMiddleware = createSagaMiddleware();\n\n  const store = createStore(createRootReducer(), {}, composeEnhancers(applyMiddleware(sagaMiddleware)));\n\n  sagaMiddleware.run(rootSaga);\n\n  // @ts-ignore\n  return store;\n}\n"],"sourceRoot":""}